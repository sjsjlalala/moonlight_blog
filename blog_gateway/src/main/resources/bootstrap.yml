server:
  port: 8081
spring:
  application:
    name: blog-gateway
  cloud:
    nacos:
      username: nacos
      password: nacos

      discovery:
        server-addr: 192.168.123.222:8848
        namespace: dev
      config:
        server-addr: 192.168.123.222:8848
        #文件后缀
        file-extension: yaml
        #指定分组
        group: dev
        #指定命名空间
        namespace: dev
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allow-credentials: false
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            exposedHeaders: "*"
      #服务发现禁用
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true

      routes:
        # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        - id: blog-admin
          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
          uri: lb::/ blog-admin
          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
          predicates:
            # 路径匹配，以 api 开头，直接配置是不生效的，看 filters 配置
            - Path=/blog-admin/**
          filters:
            # 前缀过滤，默认配置下，我们的请求路径是 http://localhost:8888/business-oauth2/** 这时会路由到指定的服务
            # 此处配置去掉 1 个路径前缀，再配置上面的 Path=/api/**，就能按照 http://localhost:8888/api/** 的方式访问了
            - StripPrefix=1

        - id: blog-auth
          uri: lb::/ blog-auth
          predicates:
            - Path=/blog-auth/**
          filters:
            - StripPrefix=1

